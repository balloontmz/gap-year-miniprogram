"use strict";
Page({
    data: {
        loginStatus: false,
        taskCount: 0,
    },
    bindViewTap: function () {
        wx.navigateTo({
            url: '../logs/logs',
        });
    },
    onLoad: function () {
        this.getLoginStatus();
    },
    onShow: function () {
        this.getLoginStatus();
    },
    getLoginStatus: function () {
        wx.getStorage({
            key: 'loginStatus',
            success: this.onLoginStatusGetSuccess,
            fail: this.onLoginStatusGetFail,
        });
    },
    onLoginStatusGetSuccess: function (e) {
        console.log('获取登录状态成功回调', e);
        this.setData({
            loginStatus: e.data
        });
    },
    onLoginStatusGetFail: function (e) {
        console.log('获取登录状态失败回调', e);
        wx.setStorage({
            key: 'loginStatus',
            data: false,
        });
        this.setData({
            loginStatus: false
        });
    },
    loginStatusChanged: function (e) {
        console.log('登录状态变更触发的事件回调', e);
        this.getLoginStatus();
    },
    userTaskFetch: function (e) {
        var _a;
        console.log('拉取用户任务回调', e);
        this.setData({
            taskCount: (_a = e.detail.count) !== null && _a !== void 0 ? _a : 0
        });
    },
    onTapNavigateBtn: function (e) {
        console.log('点击跳转按钮事件为:', e);
        if (this.data.loginStatus == false) {
            console.log('登录状态为 false,直接忽略');
            wx.showLoading({
                title: '请先登录',
            });
            setTimeout(function () {
                wx.hideLoading();
            }, 2000);
            return;
        }
        wx.navigateTo({
            url: e.target.dataset.path,
        });
    },
    onNavigatorToTaskPool: function () {
        if (this.data.loginStatus == false) {
            console.log('登录状态为 false,直接忽略');
        }
        else {
            wx.navigateTo({
                url: '/pages/task_list/task_list',
            });
        }
    },
    onNavigatorToMyTask: function () {
        if (this.data.loginStatus == false) {
            console.log('登录状态为 false,直接忽略');
            return;
        }
        wx.navigateTo({
            url: '/pages/user_task_list/user_task_list',
        });
    }
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9kby5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbInRvZG8udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUdBLElBQUksQ0FBQztJQUNELElBQUksRUFBRTtRQUNGLFdBQVcsRUFBRSxLQUFLO1FBQ2xCLFNBQVMsRUFBRSxDQUFDO0tBQ2Y7SUFFRCxXQUFXO1FBQ1AsRUFBRSxDQUFDLFVBQVUsQ0FBQztZQUNWLEdBQUcsRUFBRSxjQUFjO1NBQ3RCLENBQUMsQ0FBQTtJQUNOLENBQUM7SUFDRCxNQUFNO1FBQ0YsSUFBSSxDQUFDLGNBQWMsRUFBRSxDQUFBO0lBQ3pCLENBQUM7SUFFRCxNQUFNO1FBQ0YsSUFBSSxDQUFDLGNBQWMsRUFBRSxDQUFBO0lBQ3pCLENBQUM7SUFFRCxjQUFjO1FBQ1YsRUFBRSxDQUFDLFVBQVUsQ0FBQztZQUNWLEdBQUcsRUFBRSxhQUFhO1lBQ2xCLE9BQU8sRUFBRSxJQUFJLENBQUMsdUJBQXVCO1lBQ3JDLElBQUksRUFBRSxJQUFJLENBQUMsb0JBQW9CO1NBQ2xDLENBQUMsQ0FBQTtJQUNOLENBQUM7SUFFRCx1QkFBdUIsRUFBdkIsVUFBd0IsQ0FBTTtRQUMxQixPQUFPLENBQUMsR0FBRyxDQUFDLFlBQVksRUFBRSxDQUFDLENBQUMsQ0FBQTtRQUM1QixJQUFJLENBQUMsT0FBTyxDQUFDO1lBQ1QsV0FBVyxFQUFFLENBQUMsQ0FBQyxJQUFJO1NBQ3RCLENBQUMsQ0FBQTtJQUNOLENBQUM7SUFFRCxvQkFBb0IsRUFBcEIsVUFBcUIsQ0FBTTtRQUN2QixPQUFPLENBQUMsR0FBRyxDQUFDLFlBQVksRUFBRSxDQUFDLENBQUMsQ0FBQTtRQUM1QixFQUFFLENBQUMsVUFBVSxDQUFDO1lBQ1YsR0FBRyxFQUFFLGFBQWE7WUFDbEIsSUFBSSxFQUFFLEtBQUs7U0FDZCxDQUFDLENBQUE7UUFDRixJQUFJLENBQUMsT0FBTyxDQUFDO1lBQ1QsV0FBVyxFQUFFLEtBQUs7U0FDckIsQ0FBQyxDQUFBO0lBQ04sQ0FBQztJQUVELGtCQUFrQixFQUFsQixVQUFtQixDQUFNO1FBQ3JCLE9BQU8sQ0FBQyxHQUFHLENBQUMsZUFBZSxFQUFFLENBQUMsQ0FBQyxDQUFBO1FBQy9CLElBQUksQ0FBQyxjQUFjLEVBQUUsQ0FBQTtJQUN6QixDQUFDO0lBRUQsYUFBYSxFQUFiLFVBQWMsQ0FBTTs7UUFDaEIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxVQUFVLEVBQUUsQ0FBQyxDQUFDLENBQUE7UUFDMUIsSUFBSSxDQUFDLE9BQU8sQ0FBQztZQUNULFNBQVMsUUFBRSxDQUFDLENBQUMsTUFBTSxDQUFDLEtBQUssbUNBQUksQ0FBQztTQUNqQyxDQUFDLENBQUE7SUFDTixDQUFDO0lBRUQsZ0JBQWdCLEVBQWhCLFVBQWlCLENBQU07UUFDbkIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxZQUFZLEVBQUUsQ0FBQyxDQUFDLENBQUE7UUFDNUIsSUFBSSxJQUFJLENBQUMsSUFBSSxDQUFDLFdBQVcsSUFBSSxLQUFLLEVBQUU7WUFDaEMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxrQkFBa0IsQ0FBQyxDQUFBO1lBQy9CLEVBQUUsQ0FBQyxXQUFXLENBQUM7Z0JBQ1gsS0FBSyxFQUFFLE1BQU07YUFDaEIsQ0FBQyxDQUFBO1lBQ0YsVUFBVSxDQUFDO2dCQUNQLEVBQUUsQ0FBQyxXQUFXLEVBQUUsQ0FBQTtZQUNwQixDQUFDLEVBQUUsSUFBSSxDQUFDLENBQUE7WUFDUixPQUFNO1NBQ1Q7UUFDRCxFQUFFLENBQUMsVUFBVSxDQUFDO1lBQ1YsR0FBRyxFQUFFLENBQUMsQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLElBQUk7U0FDN0IsQ0FBQyxDQUFBO0lBQ04sQ0FBQztJQUVELHFCQUFxQjtRQUNqQixJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsV0FBVyxJQUFJLEtBQUssRUFBRTtZQUNoQyxPQUFPLENBQUMsR0FBRyxDQUFDLGtCQUFrQixDQUFDLENBQUE7U0FFbEM7YUFBTTtZQUNILEVBQUUsQ0FBQyxVQUFVLENBQUM7Z0JBQ1YsR0FBRyxFQUFFLDRCQUE0QjthQUNwQyxDQUFDLENBQUE7U0FDTDtJQUNMLENBQUM7SUFFRCxtQkFBbUI7UUFDZixJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsV0FBVyxJQUFJLEtBQUssRUFBRTtZQUNoQyxPQUFPLENBQUMsR0FBRyxDQUFDLGtCQUFrQixDQUFDLENBQUE7WUFDL0IsT0FBTTtTQUNUO1FBQ0QsRUFBRSxDQUFDLFVBQVUsQ0FBQztZQUNWLEdBQUcsRUFBRSxzQ0FBc0M7U0FDOUMsQ0FBQyxDQUFBO0lBQ04sQ0FBQztDQUNKLENBQUMsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbIi8vIHRvZG8udHNcbi8vIOiOt+WPluW6lOeUqOWunuS+i1xuXG5QYWdlKHtcbiAgICBkYXRhOiB7XG4gICAgICAgIGxvZ2luU3RhdHVzOiBmYWxzZSxcbiAgICAgICAgdGFza0NvdW50OiAwLFxuICAgIH0sXG4gICAgLy8g5LqL5Lu25aSE55CG5Ye95pWwXG4gICAgYmluZFZpZXdUYXAoKSB7XG4gICAgICAgIHd4Lm5hdmlnYXRlVG8oe1xuICAgICAgICAgICAgdXJsOiAnLi4vbG9ncy9sb2dzJyxcbiAgICAgICAgfSlcbiAgICB9LFxuICAgIG9uTG9hZCgpIHtcbiAgICAgICAgdGhpcy5nZXRMb2dpblN0YXR1cygpXG4gICAgfSxcblxuICAgIG9uU2hvdygpIHtcbiAgICAgICAgdGhpcy5nZXRMb2dpblN0YXR1cygpXG4gICAgfSxcblxuICAgIGdldExvZ2luU3RhdHVzKCkge1xuICAgICAgICB3eC5nZXRTdG9yYWdlKHtcbiAgICAgICAgICAgIGtleTogJ2xvZ2luU3RhdHVzJyxcbiAgICAgICAgICAgIHN1Y2Nlc3M6IHRoaXMub25Mb2dpblN0YXR1c0dldFN1Y2Nlc3MsXG4gICAgICAgICAgICBmYWlsOiB0aGlzLm9uTG9naW5TdGF0dXNHZXRGYWlsLFxuICAgICAgICB9KVxuICAgIH0sXG5cbiAgICBvbkxvZ2luU3RhdHVzR2V0U3VjY2VzcyhlOiBhbnkpIHtcbiAgICAgICAgY29uc29sZS5sb2coJ+iOt+WPlueZu+W9leeKtuaAgeaIkOWKn+WbnuiwgycsIGUpXG4gICAgICAgIHRoaXMuc2V0RGF0YSh7XG4gICAgICAgICAgICBsb2dpblN0YXR1czogZS5kYXRhXG4gICAgICAgIH0pXG4gICAgfSxcblxuICAgIG9uTG9naW5TdGF0dXNHZXRGYWlsKGU6IGFueSkge1xuICAgICAgICBjb25zb2xlLmxvZygn6I635Y+W55m75b2V54q25oCB5aSx6LSl5Zue6LCDJywgZSlcbiAgICAgICAgd3guc2V0U3RvcmFnZSh7XG4gICAgICAgICAgICBrZXk6ICdsb2dpblN0YXR1cycsXG4gICAgICAgICAgICBkYXRhOiBmYWxzZSxcbiAgICAgICAgfSlcbiAgICAgICAgdGhpcy5zZXREYXRhKHtcbiAgICAgICAgICAgIGxvZ2luU3RhdHVzOiBmYWxzZVxuICAgICAgICB9KVxuICAgIH0sXG5cbiAgICBsb2dpblN0YXR1c0NoYW5nZWQoZTogYW55KSB7XG4gICAgICAgIGNvbnNvbGUubG9nKCfnmbvlvZXnirbmgIHlj5jmm7Top6blj5HnmoTkuovku7blm57osIMnLCBlKVxuICAgICAgICB0aGlzLmdldExvZ2luU3RhdHVzKClcbiAgICB9LFxuXG4gICAgdXNlclRhc2tGZXRjaChlOiBhbnkpIHtcbiAgICAgICAgY29uc29sZS5sb2coJ+aLieWPlueUqOaIt+S7u+WKoeWbnuiwgycsIGUpXG4gICAgICAgIHRoaXMuc2V0RGF0YSh7XG4gICAgICAgICAgICB0YXNrQ291bnQ6IGUuZGV0YWlsLmNvdW50ID8/IDBcbiAgICAgICAgfSlcbiAgICB9LFxuXG4gICAgb25UYXBOYXZpZ2F0ZUJ0bihlOiBhbnkpIHtcbiAgICAgICAgY29uc29sZS5sb2coJ+eCueWHu+i3s+i9rOaMiemSruS6i+S7tuS4ujonLCBlKVxuICAgICAgICBpZiAodGhpcy5kYXRhLmxvZ2luU3RhdHVzID09IGZhbHNlKSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZygn55m75b2V54q25oCB5Li6IGZhbHNlLOebtOaOpeW/veeVpScpXG4gICAgICAgICAgICB3eC5zaG93TG9hZGluZyh7XG4gICAgICAgICAgICAgICAgdGl0bGU6ICfor7flhYjnmbvlvZUnLFxuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgICAgIHd4LmhpZGVMb2FkaW5nKClcbiAgICAgICAgICAgIH0sIDIwMDApXG4gICAgICAgICAgICByZXR1cm5cbiAgICAgICAgfVxuICAgICAgICB3eC5uYXZpZ2F0ZVRvKHtcbiAgICAgICAgICAgIHVybDogZS50YXJnZXQuZGF0YXNldC5wYXRoLFxuICAgICAgICB9KVxuICAgIH0sXG5cbiAgICBvbk5hdmlnYXRvclRvVGFza1Bvb2woKSB7XG4gICAgICAgIGlmICh0aGlzLmRhdGEubG9naW5TdGF0dXMgPT0gZmFsc2UpIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCfnmbvlvZXnirbmgIHkuLogZmFsc2Us55u05o6l5b+955WlJylcblxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgd3gubmF2aWdhdGVUbyh7XG4gICAgICAgICAgICAgICAgdXJsOiAnL3BhZ2VzL3Rhc2tfbGlzdC90YXNrX2xpc3QnLFxuICAgICAgICAgICAgfSlcbiAgICAgICAgfVxuICAgIH0sXG5cbiAgICBvbk5hdmlnYXRvclRvTXlUYXNrKCkge1xuICAgICAgICBpZiAodGhpcy5kYXRhLmxvZ2luU3RhdHVzID09IGZhbHNlKSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZygn55m75b2V54q25oCB5Li6IGZhbHNlLOebtOaOpeW/veeVpScpXG4gICAgICAgICAgICByZXR1cm5cbiAgICAgICAgfVxuICAgICAgICB3eC5uYXZpZ2F0ZVRvKHtcbiAgICAgICAgICAgIHVybDogJy9wYWdlcy91c2VyX3Rhc2tfbGlzdC91c2VyX3Rhc2tfbGlzdCcsXG4gICAgICAgIH0pXG4gICAgfVxufSlcbiJdfQ==