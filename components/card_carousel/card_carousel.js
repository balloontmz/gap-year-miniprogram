"use strict";
var touch = [0, 0];
var api = require('../../utils/request/api');
Component({
    properties: {
        loginStatus: {
            type: String,
            value: 'false',
        }
    },
    data: {
        cardData: [
            {
                id: 0,
                name: '壁花少年',
                image: 'https://movie-1256948132.cos.ap-beijing.myqcloud.com/p1874816818.jpg',
                detail: '查理（罗根·勒曼 Logan Lerman 饰）是个害羞和孤独的高中新生，拥有超越年龄的敏感和泪腺，总是默默观察身边的家人和朋友，是个典型的「壁花少年」。他的青春期充满各种挫折，先后经历了阿姨为给他买生日礼物去世、最好朋友自杀、受同侪排挤欺负、单恋没有回应等各种事情。然而查理还不是最惨的，因为和他一样被生活逼入墙角罚站的人实在太多。他幸运的拥有一个开明的老师和两个高年级的好友：叛逆娇俏的少女珊（艾玛·沃森 Emma Watson 饰）和自信满满的同志男生帕特里克（埃兹拉·米勒 Ezra Miller 饰），他们让查理明白了有时候不能永远旁观，必须要参与进来才能拥有属于自己的精彩。 ',
                category: '青春 / 成长 / 美国 / 爱情',
            },
            {
                id: 1,
                name: '十面埋伏',
                image: 'https://movie-1256948132.cos.ap-beijing.myqcloud.com/p1874816818.jpg',
                detail: '查理（罗根·勒曼 Logan Lerman 饰）是个害羞和孤独的高中新生，拥有超越年龄的敏感和泪腺，总是默默观察身边的家人和朋友，是个典型的「壁花少年」。他的青春期充满各种挫折，先后经历了阿姨为给他买生日礼物去世、最好朋友自杀、受同侪排挤欺负、单恋没有回应等各种事情。然而查理还不是最惨的，因为和他一样被生活逼入墙角罚站的人实在太多。他幸运的拥有一个开明的老师和两个高年级的好友：叛逆娇俏的少女珊（艾玛·沃森 Emma Watson 饰）和自信满满的同志男生帕特里克（埃兹拉·米勒 Ezra Miller 饰），他们让查理明白了有时候不能永远旁观，必须要参与进来才能拥有属于自己的精彩。 ',
                category: '青春 / 成长 / 美国 / 爱情',
            },
            {
                id: 2,
                name: '笑傲江湖',
                image: 'https://movie-1256948132.cos.ap-beijing.myqcloud.com/p1874816818.jpg',
                detail: '查理（罗根·勒曼 Logan Lerman 饰）是个害羞和孤独的高中新生，拥有超越年龄的敏感和泪腺，总是默默观察身边的家人和朋友，是个典型的「壁花少年」。他的青春期充满各种挫折，先后经历了阿姨为给他买生日礼物去世、最好朋友自杀、受同侪排挤欺负、单恋没有回应等各种事情。然而查理还不是最惨的，因为和他一样被生活逼入墙角罚站的人实在太多。他幸运的拥有一个开明的老师和两个高年级的好友：叛逆娇俏的少女珊（艾玛·沃森 Emma Watson 饰）和自信满满的同志男生帕特里克（埃兹拉·米勒 Ezra Miller 饰），他们让查理明白了有时候不能永远旁观，必须要参与进来才能拥有属于自己的精彩。 ',
                category: '青春 / 成长 / 美国 / 爱情',
            },
        ],
        testCurrentNav: 0,
        currentIndex: 0,
        currentCard: {},
        cardDistance: 0,
        classArray: ['active', 'next'],
    },
    methods: {
        onTouchStart: function (e) {
            console.log(e);
            touch[0] = e.touches[0].clientX;
        },
        onTouchEnd: function (e) {
            touch[1] = e.changedTouches[0].clientX;
            if (touch[0] - touch[1] > 5) {
                this.addClassName('left');
            }
            else if (touch[1] - touch[0] > 5) {
                this.addClassName('right');
            }
        },
        addClassName: function (direction) {
            var currentIndex = this.data.currentIndex;
            var currentCard = {};
            var cardData = this.data.cardData;
            var length = cardData.length;
            var classArray = new Array(length);
            if (direction === 'left') {
                if (++currentIndex >= length)
                    return;
                classArray[currentIndex] = 'active';
                classArray[currentIndex - 1] = 'prev';
                if (currentIndex + 1 < length) {
                    classArray[currentIndex + 1] = 'next';
                }
            }
            else if (direction === 'right') {
                if (--currentIndex < 0)
                    return;
                if (currentIndex - 1 >= 0) {
                    classArray[currentIndex - 1] = 'prev';
                }
                classArray[currentIndex] = 'active';
                classArray[currentIndex + 1] = 'next';
            }
            currentCard = cardData[currentIndex];
            this.moveCard(direction);
            this.setData({
                currentIndex: currentIndex,
                classArray: classArray,
                currentCard: currentCard,
            });
        },
        moveCard: function (direction) {
            var cardDistance = this.data.cardDistance;
            if (direction === 'left') {
                cardDistance -= 549;
            }
            else if (direction === 'right') {
                cardDistance += 549;
            }
            this.setData({
                cardDistance: cardDistance
            });
        },
        getMovieList: function () {
            var _this = this;
            wx.showLoading({
                title: '获取电影列表...',
            });
            api.userTaskList().then(function (res) {
                console.log(res);
                var list = new Array();
                for (var index = 0; index < res.data.length; index++) {
                    var element = res.data[index];
                    list.push({
                        id: element.id,
                        name: element.name,
                        detail: element.detail,
                    });
                }
                console.log('赋值完成的 list 为:', list);
                _this.setData({
                    cardData: list
                });
            });
            wx.hideLoading();
        },
        onTapNavigateTo: function (e) {
            console.log(e);
            var id = e.currentTarget.dataset.id;
            console.log(id, e);
        },
        onTapLogin: function (e) {
            console.log(e);
            wx.login({
                success: function (res) {
                    console.log("第一步:授权登录码为:", res.code);
                    wx.setStorage({
                        data: res.code,
                        key: 'temp-auth-code'
                    });
                },
            });
        },
        getUserInfo: function (e) {
            var _this = this;
            console.log('第二步:授权获取到的信息为:', e);
            var code = wx.getStorageSync('temp-auth-code');
            api.wxLogin({
                code: code,
                encrypted_data: e.detail.encryptedData,
                iv: e.detail.iv,
            }).then(function (res) {
                console.log(res);
                _this.setUpUserToken(res);
            }).catch(function (err) {
                console.log(err);
            });
        },
        setUpUserToken: function (res) {
            wx.setStorage({
                data: 'Bearer ' + res.data.access_token,
                key: 'token',
                success: this.setLoginStatus(this.onLoginStatusChanged(this)),
            });
        },
        setLoginStatus: function (callBack) {
            return function (e) {
                console.log('设置 token 成功回调', e);
                wx.setStorage({
                    key: 'loginStatus',
                    data: true,
                    success: callBack
                });
            };
        },
        onLoginStatusChanged: function (self) {
            return function (e) {
                console.log('登录状态变更 回调', e);
                var myEventDetail = {};
                var myEventOption = {};
                self.triggerEvent('loginStatusUpdated', myEventDetail, myEventOption);
            };
        },
    },
    attached: function () {
        this.getMovieList();
        console.log('当前登录状态为:', this.properties.loginStatus);
    }
});
//# sourceMappingURL=data:application/json;base64,