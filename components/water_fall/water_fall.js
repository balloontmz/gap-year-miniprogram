"use strict";
Component({
    properties: {},
    data: {
        images: [{
                width: 360,
                height: 540,
                showHeight: 0,
            }, {
                width: 480,
                height: 540,
                showHeight: 0,
            }, {
                width: 540,
                height: 720,
                showHeight: 0,
            }, {
                width: 720,
                height: 960,
                showHeight: 0,
            }, {
                width: 540,
                height: 960,
                showHeight: 0,
            }, {
                width: 360,
                height: 720,
                showHeight: 0,
            }, {
                width: 360,
                height: 960,
                showHeight: 0,
            }, {
                width: 540,
                height: 540,
                showHeight: 0,
            }, {
                width: 540,
                height: 1440,
                showHeight: 0,
            }, {
                width: 960,
                height: 1440,
                showHeight: 0,
            }],
        heightArr: Array(),
        list: Array(),
        col: 2
    },
    methods: {
        initData: function (col) {
            var images = [];
            var scale = 2;
            for (var i = 0; i < 10; i++) {
                var image = this.data.images[Math.floor(Math.random() * 10)];
                images.push(image);
            }
            for (var i in images) {
                var height = 165 / images[i].width * images[i].height * scale;
                images[i].showHeight = height;
                if (i < col) {
                    this.data.list.push([images[i]]);
                    this.data.heightArr.push(height);
                }
                else {
                    var minHeight = Math.min.apply(null, this.data.heightArr);
                    var minHeightIndex = this.data.heightArr.indexOf(minHeight);
                    this.data.list[minHeightIndex].push(images[i]);
                    this.data.heightArr[minHeightIndex] += height;
                }
            }
            this.setData({
                list: this.data.list
            });
        },
        onReachBottom: function () {
            this.initData(0);
        }
    },
    attached: function () {
        this.initData(2);
    },
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2F0ZXJfZmFsbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIndhdGVyX2ZhbGwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBLFNBQVMsQ0FBQztJQUlSLFVBQVUsRUFBRSxFQUVYO0lBS0QsSUFBSSxFQUFFO1FBQ0osTUFBTSxFQUFFLENBQUM7Z0JBQ1AsS0FBSyxFQUFFLEdBQUc7Z0JBQ1YsTUFBTSxFQUFFLEdBQUc7Z0JBQ1gsVUFBVSxFQUFFLENBQUM7YUFDZCxFQUFFO2dCQUNELEtBQUssRUFBRSxHQUFHO2dCQUNWLE1BQU0sRUFBRSxHQUFHO2dCQUNYLFVBQVUsRUFBRSxDQUFDO2FBQ2QsRUFBRTtnQkFDRCxLQUFLLEVBQUUsR0FBRztnQkFDVixNQUFNLEVBQUUsR0FBRztnQkFDWCxVQUFVLEVBQUUsQ0FBQzthQUNkLEVBQUU7Z0JBQ0QsS0FBSyxFQUFFLEdBQUc7Z0JBQ1YsTUFBTSxFQUFFLEdBQUc7Z0JBQ1gsVUFBVSxFQUFFLENBQUM7YUFDZCxFQUFFO2dCQUNELEtBQUssRUFBRSxHQUFHO2dCQUNWLE1BQU0sRUFBRSxHQUFHO2dCQUNYLFVBQVUsRUFBRSxDQUFDO2FBQ2QsRUFBRTtnQkFDRCxLQUFLLEVBQUUsR0FBRztnQkFDVixNQUFNLEVBQUUsR0FBRztnQkFDWCxVQUFVLEVBQUUsQ0FBQzthQUNkLEVBQUU7Z0JBQ0QsS0FBSyxFQUFFLEdBQUc7Z0JBQ1YsTUFBTSxFQUFFLEdBQUc7Z0JBQ1gsVUFBVSxFQUFFLENBQUM7YUFDZCxFQUFFO2dCQUNELEtBQUssRUFBRSxHQUFHO2dCQUNWLE1BQU0sRUFBRSxHQUFHO2dCQUNYLFVBQVUsRUFBRSxDQUFDO2FBQ2QsRUFBRTtnQkFDRCxLQUFLLEVBQUUsR0FBRztnQkFDVixNQUFNLEVBQUUsSUFBSTtnQkFDWixVQUFVLEVBQUUsQ0FBQzthQUNkLEVBQUU7Z0JBQ0QsS0FBSyxFQUFFLEdBQUc7Z0JBQ1YsTUFBTSxFQUFFLElBQUk7Z0JBQ1osVUFBVSxFQUFFLENBQUM7YUFDZCxDQUFDO1FBQ0YsU0FBUyxFQUFFLEtBQUssRUFBVTtRQUMxQixJQUFJLEVBQUUsS0FBSyxFQUFPO1FBQ2xCLEdBQUcsRUFBRSxDQUFDO0tBQ1A7SUFLRCxPQUFPLEVBQUU7UUFFUCxRQUFRLFlBQUMsR0FBRztZQUNWLElBQUksTUFBTSxHQUFHLEVBQUUsQ0FBQTtZQUNmLElBQUksS0FBSyxHQUFHLENBQUMsQ0FBQTtZQUViLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUU7Z0JBQzNCLElBQUksS0FBSyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxHQUFHLEVBQUUsQ0FBQyxDQUFDLENBQUE7Z0JBQzVELE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUE7YUFDbkI7WUFDRCxLQUFLLElBQUksQ0FBQyxJQUFJLE1BQU0sRUFBRTtnQkFDcEIsSUFBSSxNQUFNLEdBQUcsR0FBRyxHQUFHLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLEdBQUcsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUE7Z0JBQzdELE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxVQUFVLEdBQUcsTUFBTSxDQUFBO2dCQUU3QixJQUFJLENBQUMsR0FBRyxHQUFHLEVBQUU7b0JBQ1gsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQTtvQkFDaEMsSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFBO2lCQUNqQztxQkFBTTtvQkFFTCxJQUFJLFNBQVMsR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQTtvQkFDekQsSUFBSSxjQUFjLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxDQUFBO29CQUMzRCxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxjQUFjLENBQUMsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUE7b0JBQzlDLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLGNBQWMsQ0FBQyxJQUFJLE1BQU0sQ0FBQTtpQkFDOUM7YUFDRjtZQUNELElBQUksQ0FBQyxPQUFPLENBQUM7Z0JBQ1gsSUFBSSxFQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSTthQUNyQixDQUFDLENBQUE7UUFDSixDQUFDO1FBQ0QsYUFBYTtZQUNYLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUE7UUFDbEIsQ0FBQztLQUVGO0lBRUQsUUFBUTtRQUNOLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUE7SUFDbEIsQ0FBQztDQUNGLENBQUMsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbIi8vIGNvbXBvbmVudHMvd2F0ZXJfZmFsbC93YXRlcl9mYWxsLnRzXG5Db21wb25lbnQoe1xuICAvKipcbiAgICog57uE5Lu255qE5bGe5oCn5YiX6KGoXG4gICAqL1xuICBwcm9wZXJ0aWVzOiB7XG5cbiAgfSxcblxuICAvKipcbiAgICog57uE5Lu255qE5Yid5aeL5pWw5o2uXG4gICAqL1xuICBkYXRhOiB7XG4gICAgaW1hZ2VzOiBbe1xuICAgICAgd2lkdGg6IDM2MCxcbiAgICAgIGhlaWdodDogNTQwLFxuICAgICAgc2hvd0hlaWdodDogMCxcbiAgICB9LCB7XG4gICAgICB3aWR0aDogNDgwLFxuICAgICAgaGVpZ2h0OiA1NDAsXG4gICAgICBzaG93SGVpZ2h0OiAwLFxuICAgIH0sIHtcbiAgICAgIHdpZHRoOiA1NDAsXG4gICAgICBoZWlnaHQ6IDcyMCxcbiAgICAgIHNob3dIZWlnaHQ6IDAsXG4gICAgfSwge1xuICAgICAgd2lkdGg6IDcyMCxcbiAgICAgIGhlaWdodDogOTYwLFxuICAgICAgc2hvd0hlaWdodDogMCxcbiAgICB9LCB7XG4gICAgICB3aWR0aDogNTQwLFxuICAgICAgaGVpZ2h0OiA5NjAsXG4gICAgICBzaG93SGVpZ2h0OiAwLFxuICAgIH0sIHtcbiAgICAgIHdpZHRoOiAzNjAsXG4gICAgICBoZWlnaHQ6IDcyMCxcbiAgICAgIHNob3dIZWlnaHQ6IDAsXG4gICAgfSwge1xuICAgICAgd2lkdGg6IDM2MCxcbiAgICAgIGhlaWdodDogOTYwLFxuICAgICAgc2hvd0hlaWdodDogMCxcbiAgICB9LCB7XG4gICAgICB3aWR0aDogNTQwLFxuICAgICAgaGVpZ2h0OiA1NDAsXG4gICAgICBzaG93SGVpZ2h0OiAwLFxuICAgIH0sIHtcbiAgICAgIHdpZHRoOiA1NDAsXG4gICAgICBoZWlnaHQ6IDE0NDAsXG4gICAgICBzaG93SGVpZ2h0OiAwLFxuICAgIH0sIHtcbiAgICAgIHdpZHRoOiA5NjAsXG4gICAgICBoZWlnaHQ6IDE0NDAsXG4gICAgICBzaG93SGVpZ2h0OiAwLFxuICAgIH1dLFxuICAgIGhlaWdodEFycjogQXJyYXk8bnVtYmVyPigpLFxuICAgIGxpc3Q6IEFycmF5PGFueT4oKSxcbiAgICBjb2w6IDJcbiAgfSxcblxuICAvKipcbiAgICog57uE5Lu255qE5pa55rOV5YiX6KGoXG4gICAqL1xuICBtZXRob2RzOiB7XG5cbiAgICBpbml0RGF0YShjb2wpIHtcbiAgICAgIGxldCBpbWFnZXMgPSBbXVxuICAgICAgbGV0IHNjYWxlID0gMlxuICAgICAgLy8g5qih5ouf5Zu+54mH5a696auYXG4gICAgICBmb3IgKGxldCBpID0gMDsgaSA8IDEwOyBpKyspIHtcbiAgICAgICAgbGV0IGltYWdlID0gdGhpcy5kYXRhLmltYWdlc1tNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAxMCldXG4gICAgICAgIGltYWdlcy5wdXNoKGltYWdlKVxuICAgICAgfVxuICAgICAgZm9yIChsZXQgaSBpbiBpbWFnZXMpIHtcbiAgICAgICAgbGV0IGhlaWdodCA9IDE2NSAvIGltYWdlc1tpXS53aWR0aCAqIGltYWdlc1tpXS5oZWlnaHQgKiBzY2FsZVxuICAgICAgICBpbWFnZXNbaV0uc2hvd0hlaWdodCA9IGhlaWdodFxuICAgICAgICAvLyDnrKzkuIDooYznmoTkuKTkuKrnm5LlrZBcbiAgICAgICAgaWYgKGkgPCBjb2wpIHtcbiAgICAgICAgICB0aGlzLmRhdGEubGlzdC5wdXNoKFtpbWFnZXNbaV1dKVxuICAgICAgICAgIHRoaXMuZGF0YS5oZWlnaHRBcnIucHVzaChoZWlnaHQpXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgLy8g6YCJ5Ye66auY5bqm6L6D55+u55qE5LiA5YiX55qE57Si5byVXG4gICAgICAgICAgbGV0IG1pbkhlaWdodCA9IE1hdGgubWluLmFwcGx5KG51bGwsIHRoaXMuZGF0YS5oZWlnaHRBcnIpXG4gICAgICAgICAgbGV0IG1pbkhlaWdodEluZGV4ID0gdGhpcy5kYXRhLmhlaWdodEFyci5pbmRleE9mKG1pbkhlaWdodClcbiAgICAgICAgICB0aGlzLmRhdGEubGlzdFttaW5IZWlnaHRJbmRleF0ucHVzaChpbWFnZXNbaV0pXG4gICAgICAgICAgdGhpcy5kYXRhLmhlaWdodEFyclttaW5IZWlnaHRJbmRleF0gKz0gaGVpZ2h0XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHRoaXMuc2V0RGF0YSh7XG4gICAgICAgIGxpc3Q6IHRoaXMuZGF0YS5saXN0XG4gICAgICB9KVxuICAgIH0sXG4gICAgb25SZWFjaEJvdHRvbSgpIHtcbiAgICAgIHRoaXMuaW5pdERhdGEoMClcbiAgICB9XG5cbiAgfSxcblxuICBhdHRhY2hlZCgpIHtcbiAgICB0aGlzLmluaXREYXRhKDIpXG4gIH0sXG59KVxuIl19